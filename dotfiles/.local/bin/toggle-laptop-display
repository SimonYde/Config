#!/usr/bin/env -S nu --no-config-file

def handle_event [event_data: string] {
    let parsed = $event_data | parse "{event}>>{data}" | first

    match $parsed.event {
        monitorremoved => {
            if $parsed.data !~ eDP {
                print "External monitor removed, enabling builtin display..."
                hyprctl keyword monitor "eDP-1,2880x1920@120,0x0,1.5"
            }
        },
        monitoradded => {
            if $parsed.data !~ eDP {
                print "External monitor added, disabling builtin display..."
                hyprctl keyword monitor "eDP-1,disable"
            }
        },
    }
}

def main [state?: string] {
    match $state {
        "on" => {
            hyprctl keyword monitor "eDP-1,2880x1920@120,0x0,1.5"
        }

        "off" => {
            hyprctl keyword monitor "eDP-1,disable"
        }

        "auto" => {
            let socket = $"($env.XDG_RUNTIME_DIR)/hypr/($env.HYPRLAND_INSTANCE_SIGNATURE)/.socket2.sock"

            nc -U $socket | lines | each {|event| handle_event $event | ignore }
        }

        null => {
            let builtin = hyprctl monitors -j | from json | where name like "eDP"

            if ($builtin | is-empty) {
                hyprctl keyword monitor "eDP-1,2880x1920@120,0x0,1.5"
            } else {
                hyprctl keyword monitor "eDP-1,disable"
            }
        }
    }
}
