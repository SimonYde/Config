# See https://wiki.hyprland.org/Configuring/Keywords/ for more
# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more

# █▄▀ █▀▀ █▄█ █▄▄ █ █▄░█ █▀▄ █ █▄░█ █▀▀ █▀
# █░█ ██▄ ░█░ █▄█ █ █░▀█ █▄▀ █ █░▀█ █▄█ ▄█
$mod = SUPER
$uwsm = uwsm app --

bind = $mod,       b, exec, $uwsm $browser
bind = $mod,       t, exec, $uwsm $terminal
bind = $mod SHIFT, f, exec, $uwsm $file-manager
bind = $mod,       y, exec, $uwsm $terminal -e yazi
bind = $mod SHIFT, o, exec, $uwsm obsidian

bind = $mod,       space, exec, $uwsm walker
bind = $mod,       period, exec, $uwsm walker --modules "symbols,emojis"

bind = $mod,       q,      killactive,
bind = $mod,       escape, exec, $uwsm wlogout
bind = $mod ALT,   f,      togglefloating
bind = $mod,       f,      fullscreenstate, 2
bind = $mod,       g,      exec, $uwsm hyprland-gamemode
bind = $mod,       l,      exec, $uwsm loginctl lock-session
bind = $mod ALT,   o,     exec, $uwsm hyprctl setprop active opaque toggle
bind = $mod SHIFT, s,     exec, $uwsm grimblast copy area
bind = ,           Print, exec, $uwsm grimblast --notify copysave output
bind = SHIFT,      Print, exec, $uwsm grimblast --notify copysave area
bind = $mod,       p,     pin,  active
bind = $mod,       s,      togglegroup
bind = $mod ALT, b, exec, $uwsm random-wallpaper
bind = $mod ALT, l, exec, $uwsm toggle-laptop-display auto

bindm = $mod, mouse:272, movewindow
bindm = $mod, mouse:273, resizewindow

bind = $mod,       m, movefocus,  l
bind = $mod,       n, movefocus,  d
bind = $mod,       e, movefocus,  u
bind = $mod,       i, movefocus,  r
bind = $mod SHIFT, m, movewindow, l
bind = $mod SHIFT, n, movewindow, d
bind = $mod SHIFT, e, movewindow, u
bind = $mod SHIFT, i, movewindow, r

bind = $mod CTRL ALT, m, movecurrentworkspacetomonitor, l
bind = $mod CTRL ALT, n, movecurrentworkspacetomonitor, d
bind = $mod CTRL ALT, e, movecurrentworkspacetomonitor, u
bind = $mod CTRL ALT, i, movecurrentworkspacetomonitor, r

bind = $mod,       z,     togglespecialworkspace, scratch1
bind = $mod SHIFT, z,     movetoworkspace,        special:scratch1
bind = $mod,       c,     togglespecialworkspace, scratch2
bind = $mod SHIFT, c,     movetoworkspace,        special:scratch2
bind = $mod,       d,     togglespecialworkspace, scratch3
bind = $mod SHIFT, d,     movetoworkspace,        special:scratch3
bind = $mod,       x,     togglespecialworkspace, music
bind = $mod SHIFT, x,     movetoworkspace,        special:music
bind = $mod,       minus, togglespecialworkspace, scratchpad
bind = $mod SHIFT, minus, movetoworkspace,        special:scratchpad

bind = $mod, 1, workspace, 1
bind = $mod, 2, workspace, 2
bind = $mod, 3, workspace, 3
bind = $mod, 4, workspace, 4
bind = $mod, 5, workspace, 5
bind = $mod, 6, workspace, 6
bind = $mod, 7, workspace, 7
bind = $mod, 8, workspace, 8
bind = $mod, 9, workspace, 9
bind = $mod, 0, workspace, 10

bind = $mod SHIFT, 1, movetoworkspace, 1
bind = $mod SHIFT, 2, movetoworkspace, 2
bind = $mod SHIFT, 3, movetoworkspace, 3
bind = $mod SHIFT, 4, movetoworkspace, 4
bind = $mod SHIFT, 5, movetoworkspace, 5
bind = $mod SHIFT, 6, movetoworkspace, 6
bind = $mod SHIFT, 7, movetoworkspace, 7
bind = $mod SHIFT, 8, movetoworkspace, 8
bind = $mod SHIFT, 9, movetoworkspace, 9
bind = $mod SHIFT, 0, movetoworkspace, 10

# bind = $mod, 1, split:workspace, 1
# bind = $mod, 2, split:workspace, 2
# bind = $mod, 3, split:workspace, 3
# bind = $mod, 4, split:workspace, 4
# bind = $mod, 5, split:workspace, 5
# bind = $mod, 6, split:workspace, 6
# bind = $mod, 7, split:workspace, 7
# bind = $mod, 8, split:workspace, 8
# bind = $mod, 9, split:workspace, 9
# bind = $mod, 0, split:workspace, 10
#
# bind = $mod SHIFT, 1, split:movetoworkspace, 1
# bind = $mod SHIFT, 2, split:movetoworkspace, 2
# bind = $mod SHIFT, 3, split:movetoworkspace, 3
# bind = $mod SHIFT, 4, split:movetoworkspace, 4
# bind = $mod SHIFT, 5, split:movetoworkspace, 5
# bind = $mod SHIFT, 6, split:movetoworkspace, 6
# bind = $mod SHIFT, 7, split:movetoworkspace, 7
# bind = $mod SHIFT, 8, split:movetoworkspace, 8
# bind = $mod SHIFT, 9, split:movetoworkspace, 9
# bind = $mod SHIFT, 0, split:movetoworkspace, 10

# bind = SUPER ALT CTRL SHIFT, space, split:grabroguewindows

# --- Groups ---
bind = $mod ALT, m, movewindoworgroup, l
bind = $mod ALT, n, movewindoworgroup, d
bind = $mod ALT, e, movewindoworgroup, u
bind = $mod ALT, i, movewindoworgroup, r

bind = $mod ALT, 1, changegroupactive, 1
bind = $mod ALT, 2, changegroupactive, 2
bind = $mod ALT, 3, changegroupactive, 3
bind = $mod ALT, 4, changegroupactive, 4
bind = $mod ALT, 5, changegroupactive, 5
bind = $mod ALT, 6, changegroupactive, 6
bind = $mod ALT, 7, changegroupactive, 7
bind = $mod ALT, 8, changegroupactive, 8
bind = $mod ALT, 9, changegroupactive, 9
bind = $mod ALT, 0, changegroupactive, 10

binde = $mod, Right, workspace, +1
binde = $mod, Left,  workspace, -1
binde = $mod SHIFT, Right, movetoworkspace, +1
binde = $mod SHIFT, Left,  movetoworkspace, -1

# Audio control
bind   = , XF86AudioMicMute,      exec, $uwsm swayosd-client --input-volume mute-toggle
bindl  = , XF86AudioMute,         exec, swayosd-client --output-volume mute-toggle --max-volume 100
bindel = , XF86AudioRaiseVolume,  exec, swayosd-client --output-volume +10 --max-volume 100
bindel = , XF86AudioLowerVolume,  exec, swayosd-client --output-volume -10 --max-volume 100

# Brightness control
bindel = , XF86MonBrightnessUp,   exec, swayosd-client --brightness +10
bindel = , XF86MonBrightnessDown, exec, swayosd-client --brightness -10

# Media control
bindl = , XF86AudioPlay,  exec, swayosd-client --playerctl play-pause
bindl = , XF86AudioPause, exec, swayosd-client --playerctl play-pause
bindl = , XF86AudioNext,  exec, swayosd-client --playerctl next
bindl = , XF86AudioPrev,  exec, swayosd-client --playerctl prev

bind = $mod, r, submap, resize

# will start a submap called "resize"
submap=resize

# sets repeatable binds for resizing the active window
binde = , right, resizeactive, 30 0
binde = , left,  resizeactive, -30 0
binde = , up,    resizeactive, 0 -30
binde = , down,  resizeactive, 0 30
binde = , m,     resizeactive, -30 0
binde = , n,     resizeactive, 0 30
binde = , e,     resizeactive, 0 -30
binde = , i,     resizeactive, 30 0

# use reset to go back to the global submap
bind =, escape, submap, reset

# will reset the submap, meaning end the current one and return to the global one
submap=reset

